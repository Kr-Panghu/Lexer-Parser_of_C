Terminals which are not used

   TM_VAR


Grammar

    0 $accept: NT_EXPR_E $end

    1 NT_EXPR_E: NT_EXPR_F
    2          | NT_EXPR_E TM_PLUS NT_EXPR_F

    3 NT_EXPR_F: NT_EXPR_G
    4          | NT_EXPR_F TM_MUL NT_EXPR_G

    5 NT_EXPR_G: TM_LEFT_PAREN NT_EXPR_E TM_RIGHT_PAREN
    6          | TM_IDENT
    7          | TM_NAT


Terminals, with rules where they appear

$end (0) 0
error (256)
TM_NAT (258) 7
TM_IDENT (259) 6
TM_LEFT_PAREN (260) 5
TM_RIGHT_PAREN (261) 5
TM_VAR (262)
TM_PLUS (263) 2
TM_MUL (264) 4


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
NT_EXPR_E (11)
    on left: 1 2, on right: 0 2 5
NT_EXPR_F (12)
    on left: 3 4, on right: 1 2 4
NT_EXPR_G (13)
    on left: 5 6 7, on right: 3 4


state 0

    0 $accept: . NT_EXPR_E $end

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR_E  go to state 4
    NT_EXPR_F  go to state 5
    NT_EXPR_G  go to state 6


state 1

    7 NT_EXPR_G: TM_NAT .

    $default  reduce using rule 7 (NT_EXPR_G)


state 2

    6 NT_EXPR_G: TM_IDENT .

    $default  reduce using rule 6 (NT_EXPR_G)


state 3

    5 NT_EXPR_G: TM_LEFT_PAREN . NT_EXPR_E TM_RIGHT_PAREN

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR_E  go to state 7
    NT_EXPR_F  go to state 5
    NT_EXPR_G  go to state 6


state 4

    0 $accept: NT_EXPR_E . $end
    2 NT_EXPR_E: NT_EXPR_E . TM_PLUS NT_EXPR_F

    $end     shift, and go to state 8
    TM_PLUS  shift, and go to state 9


state 5

    1 NT_EXPR_E: NT_EXPR_F .
    4 NT_EXPR_F: NT_EXPR_F . TM_MUL NT_EXPR_G

    TM_MUL  shift, and go to state 10

    $default  reduce using rule 1 (NT_EXPR_E)


state 6

    3 NT_EXPR_F: NT_EXPR_G .

    $default  reduce using rule 3 (NT_EXPR_F)


state 7

    2 NT_EXPR_E: NT_EXPR_E . TM_PLUS NT_EXPR_F
    5 NT_EXPR_G: TM_LEFT_PAREN NT_EXPR_E . TM_RIGHT_PAREN

    TM_RIGHT_PAREN  shift, and go to state 11
    TM_PLUS         shift, and go to state 9


state 8

    0 $accept: NT_EXPR_E $end .

    $default  accept


state 9

    2 NT_EXPR_E: NT_EXPR_E TM_PLUS . NT_EXPR_F

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR_F  go to state 12
    NT_EXPR_G  go to state 6


state 10

    4 NT_EXPR_F: NT_EXPR_F TM_MUL . NT_EXPR_G

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR_G  go to state 13


state 11

    5 NT_EXPR_G: TM_LEFT_PAREN NT_EXPR_E TM_RIGHT_PAREN .

    $default  reduce using rule 5 (NT_EXPR_G)


state 12

    2 NT_EXPR_E: NT_EXPR_E TM_PLUS NT_EXPR_F .
    4 NT_EXPR_F: NT_EXPR_F . TM_MUL NT_EXPR_G

    TM_MUL  shift, and go to state 10

    $default  reduce using rule 2 (NT_EXPR_E)


state 13

    4 NT_EXPR_F: NT_EXPR_F TM_MUL NT_EXPR_G .

    $default  reduce using rule 4 (NT_EXPR_F)
